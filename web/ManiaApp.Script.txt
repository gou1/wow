#RequireContext CMlApp
#Include "TextLib" as TL
#Include "MathLib" as ML

Text Doge(Text Name, Text ImageUrl, Vec3 Position)
{
    return """
    <frame posn="{{{Position.X}}} {{{Position.Y}}}">
        <quad posn="0 0 0" sizen="50 50" image="{{{ImageUrl}}}"/>
        <label posn="25 -45.5 1" sizen="50 10" text="{{{Name}}}" style="TextTitle2Blink" halign="center" valign="center2"/>
    </frame>
    """;
}

Text Doges(Text[Text][] Data) {
    declare Text Output;
    declare Vec3 Position = <-150., 80., 0.>;
    
    foreach(DogeItem in Data) {
        Output ^= Doge(DogeItem["name"], DogeItem["image_url"], Position);
        Position.X += 55;
        if(Position.X > 100.)
        {
            Position.X = -150.;
            Position.Y += -55.;
        }
    }

    return Output;
}

Text XML_NodeToText(CXmlNode _Node)
{
  if(_Node == Null)
  {
    return "";
  }
  return _Node.TextContents;
}

Text[Text] XML_NodeToArray(CXmlNode _Node)
{
  declare Text[Text] result;
    if(_Node == Null)
  {
    return result;
  }
    foreach(child in _Node.Children)
    {
        result[child.Name] = XML_NodeToText(child);
    }
  return result;
}


Text[Text][] XML_NodeToArray2(CXmlNode _Node)
{
  declare Text[Text][] result;
    foreach(child in _Node.Children)
    {
        result.add(XML_NodeToArray(child));
    }
  return result;
}

CXmlDocument XML_TextToXMLDocument(Text _XmlText) {
  declare CXmlDocument Xml <=> Xml.Create(_XmlText);
  return Xml;
}

Text GetTheDoges () {

    declare Text[Text][] _Data;
    declare _Url = "http://127.0.0.1/maniadoge/web/app_dev.php/api.xml";
    declare Request <=> Http.CreateGet(_Url, False);
    wait(Request.IsCompleted);
    if (Request.StatusCode == 200) {    
        log("Request ok");
        //Request.Result
    }
    declare _Doc = XML_TextToXMLDocument(Request.Result);
    _Data = XML_NodeToArray2(_Doc.GetFirstChild("result"));

    return Doges(_Data);
}

main() {
	declare Doges = UILayerCreate();
	Doges.ManialinkPage = GetTheDoges();
    while(True) {
        yield;
    }
	
}